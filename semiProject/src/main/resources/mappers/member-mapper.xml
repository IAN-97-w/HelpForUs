<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

	<resultMap type="Member" id="memberResultSet">
		<id column="MEMBER_USERNAME" property="memberUsername"/>
		<result column="MEMBER_PWD" property="memberPwd"/>
		<result column="MEMBER_NICKNAME" property="memberNickname"/>
		<result column="MEMBER_NAME" property="memberName"/>
		<result column="MEMBER_PHONE" property="memberPhone"/>
		<result column="MEMBER_EMAIL" property="memberEmail"/>
		<result column="MEMBER_ADDRESS" property="memberAddress"/>
		<result column="MEMBER_ROSE" property="memberRose"/>
		<result column="MEMBER_ENROLL_DATE" property="memberEnrollDate"/>
		<result column="MEMBER_MODIFY_DATE" property="memberModifyDate"/>
		<result column="MEMBER_RIGHT" property="memberRight"/>
		<result column="MEMBER_STATUS" property="memberStatus"/>
	</resultMap>
	
	<insert id="enroll" parameterType="Member">
		INSERT INTO MEMBER
		VALUES(#{memberUsername}, #{memberPwd},#{memberNickname},#{memberName},#{memberPhone},#{memberEmail},#{memberAddress},
		default,sysdate,sysdate,#{memberRight},default)
	</insert>
	
	<select id="login" parameterType="Member" resultMap="memberResultSet">
		SELECT *
		FROM MEMBER
		WHERE MEMBER_USERNAME=#{memberUsername} AND MEMBER_STATUS = 'Y'
	</select>
	
	<update id="updateRose" parameterType="java.util.HashMap">
		update member
		set MEMBER_ROSE = MEMBER_ROSE + #{roseNum}
		where MEMBER_USERNAME = #{id}
	</update>
	
	<select id="checkUsername" parameterType="string" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_USERNAME = #{userName}
	</select>
	
	<select id="checkNickName" parameterType="string" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_NICKNAME = #{nickName}
	</select>
	
	<update id="updateInfo">
		UPDATE MEMBER
		SET MEMBER_PWD = #{memberPwd}, MEMBER_NICKNAME=#{memberNickname}, 
		MEMBER_PHONE=#{memberPhone}, MEMBER_EMAIL=#{memberEmail},
		MEMBER_ADDRESS = #{memberAddress}, MEMBER_MODIFY_DATE = SYSDATE
		WHERE MEMBER_USERNAME = #{memberUsername}
	</update>
	
	<update id="deleteMember">
		UPDATE MEMBER
		SET MEMBER_STATUS = 'N'
		WHERE MEMBER_USERNAME = #{userName}
	</update>
	
	<insert id="insertPay" parameterType="java.util.HashMap">
		insert into pay
		values(seq_pid.nextval, #{roseNum}*100, sysdate, default, #{id})
	</insert>
	
	<select id="getDListCount" resultType="_int">
		SELECT COUNT(*)
		FROM BOARD B
		JOIN DONATION D ON (B.BOARD_ID = D.REF_BOARD_ID)
		JOIN MEMBER M ON ( M.MEMBER_USERNAME = D.REF_MEMBER_USERNAME)
		WHERE M.MEMBER_USERNAME = #{userName} AND B.BOARD_STATUS = 'Y'
	</select>
	
	<select id="getVListCount" resultType="_int">
		SELECT COUNT(*)
		FROM BOARD B
		JOIN APPLICATION A ON (B.BOARD_ID = A.REF_BOARD_ID)
		JOIN MEMBER M ON ( M.MEMBER_USERNAME = A.REF_MEMBER_USERNAME)
		WHERE M.MEMBER_USERNAME = #{userName} AND B.BOARD_STATUS ='Y'
	</select>
	
	<select id="getGroupDListCount" resultType="_int">
		<![CDATA[
		SELECT COUNT(*)
		FROM BOARD B
		JOIN MEMBER M ON (M.MEMBER_USERNAME = B.REF_MEMBER_USERNAME)
		WHERE M.MEMBER_USERNAME = #{userName} AND B.BOARD_TYPE = 'Don' AND B.BOARD_STATUS='Y'
		AND TO_CHAR(BOARD_DEADLINE,'MM/dd') > TO_CHAR(SYSDATE,'MM/dd')
		]]>
	</select>
	
	<select id="getGroupVListCount" resultType="_int">
		<![CDATA[
		SELECT COUNT(*)
		FROM BOARD B
		JOIN MEMBER M ON (M.MEMBER_USERNAME = B.REF_MEMBER_USERNAME)
		WHERE M.MEMBER_USERNAME = #{userName} AND B.BOARD_TYPE = 'Vol' AND B.BOARD_STATUS='Y'
		AND TO_CHAR(BOARD_DEADLINE,'MM/dd') > TO_CHAR(SYSDATE,'MM/dd')
		]]>
	</select>
	
	<select id="getEndDListCount" resultType="_int">
		<![CDATA[
		SELECT COUNT(*)
		FROM BOARD B
		JOIN MEMBER M ON (M.MEMBER_USERNAME = B.REF_MEMBER_USERNAME)
		WHERE M.MEMBER_USERNAME = #{userName} AND B.BOARD_TYPE = 'Don' AND B.BOARD_STATUS='Y'
		AND TO_CHAR(BOARD_DEADLINE,'MM/dd') < TO_CHAR(SYSDATE,'MM/dd')
		]]>
	</select>
	
	<select id="getEndVListCount" resultType="_int">
		<![CDATA[
		SELECT COUNT(*)
		FROM BOARD B
		JOIN MEMBER M ON (M.MEMBER_USERNAME = B.REF_MEMBER_USERNAME)
		WHERE M.MEMBER_USERNAME = #{userName} AND B.BOARD_TYPE = 'Vol' AND B.BOARD_STATUS='Y'
		AND TO_CHAR(BOARD_DEADLINE,'MM/dd') < TO_CHAR(SYSDATE,'MM/dd')
		]]>
	</select>
	
	<resultMap type="VolBoard" id="volBoardResultSet">
		<id property="boardId" column="BOARD_ID"/>
		<result property="boardType" column="BOARD_TYPE"/>
		<result property="refMemberUsername" column="REF_MEMBER_USERNAME"/>
		<result property="refCategoryId" column="REF_CATEGORY_ID"/>
		<result property="boardTitle" column="BOARD_TITLE"/>
		<result property="boardContent" column="BOARD_CONTENT"/>
		<result property="boardCreateDate" column="BOARD_CREATE_DATE"/>
		<result property="boardModifyDate" column="BOARD_MODIFY_DATE"/>
		<result property="boardDeadline" column="BOARD_DEADLINE"/>
		<result property="boardStatus" column="BOARD_STATUS"/>
		<result property="boardCount" column="BOARD_COUNT"/>
		<result property="volunteerGoalPeople" column="VOLUNTEER_GOAL_PEOPLE"/>
		<result property="volunteerLocation" column="VOLUNTEER_LOCATION"/>
		<result property="volunteerDate" column="VOLUNTEER_DATE"/>
		<result property="managerName" column="MANAGER_NAME"/>
		<result property="managerPhone" column="MANAGER_PHONE"/>
		<result property="memberNickname" column="MEMBER_NICKNAME"/>
		<result property="categoryName" column="CATEGORY_NAME"/>
	</resultMap>
	
	<!-- 단체가 작성한 모집중인 봉사글 -->
	<select id="getGroupVList" resultMap="volBoardResultSet">
		<![CDATA[
		SELECT B.BOARD_ID, B.BOARD_TYPE, B.BOARD_TITLE, B.BOARD_CONTENT, B.BOARD_DEADLINE, B.BOARD_STATUS
		FROM BOARD B
		JOIN MEMBER M ON(M.MEMBER_USERNAME = B.REF_MEMBER_USERNAME)
		WHERE M.MEMBER_USERNAME = #{userName} AND B.BOARD_TYPE='Vol' AND B.BOARD_STATUS = 'Y'
		AND TO_CHAR(BOARD_DEADLINE,'MM/dd') > TO_CHAR(SYSDATE,'MM/dd')
		]]>
	</select>
	
	<select id="selectMsgList" resultMap="messageResultSet" parameterType="java.util.HashMap">
		select MESSAGE_ID,REF_BOARD_ID,MESSAGE_CREATE_DATE,MESSAGE_TITLE,MESSAGE_CONTENT,MESSAGE_CHECK,RE_MESSAGE_STATUS,SE_MESSAGE_STATUS,
				SENDER_USERNAME,RECEIVER_USERNAME,BOARD_TYPE
		from message
    		join board on(REF_BOARD_ID = BOARD_ID)
		<if test="type != 1"> 
			where RE_MESSAGE_STATUS = 'Y'
			 and RECEIVER_USERNAME = #{id}
		</if>
		<if test="type == 1">
			where SE_MESSAGE_STATUS = 'Y'
			and SENDER_USERNAME = #{id}
		</if>
		order by MESSAGE_CREATE_DATE desc
	</select>
	
	<resultMap type="Message" id="messageResultSet">
		<id column="MESSAGE_ID" property="messageId"/>
		<result column="MESSAGE_CREATE_DATE" property="messageCreateDate"/>
		<result column="MESSAGE_TITLE" property="messageTitle"/>
		<result column="MESSAGE_CONTENT" property="messageContent"/>
		<result column="MESSAGE_CHECK" property="messageCheck"/>
		<result column="RE_MESSAGE_STATUS" property="reMessageStatus"/>
		<result column="SE_MESSAGE_STATUS" property="seMessageStatus"/>
		<result column="SENDER_USERNAME" property="senderUsername"/>
		<result column="RECEIVER_USERNAME" property="receiverUsername"/>
		<result column="REF_BOARD_ID" property="refBoardId"/>
		<result column="BOARD_TYPE" property="boardType"/>
	</resultMap>
		
	<select id="getMsgListCount" resultType="_int" parameterType="java.util.HashMap">
		select count(*)
		from message
		<if test="type != 1">
			where RE_MESSAGE_STATUS = 'Y'
			 and RECEIVER_USERNAME = #{id}
		</if>
		<if test="type == 1">
			where SE_MESSAGE_STATUS = 'Y'
			and SENDER_USERNAME = #{id}
		</if>
	</select>
	
	<update id="deleteMsg" parameterType="java.util.HashMap">
		update message
		<if test="msgType != 1">
			set RE_MESSAGE_STATUS = 'N'
			where MESSAGE_ID = #{mId}
		</if>
		<if test="msgType == 1">
			set SE_MESSAGE_STATUS = 'N'
			where MESSAGE_ID = #{mId}
		</if>
		
	</update>
	
	<!-- 단체가 작성한 모금중인 기부글 -->
	<select id="getGroupDList" resultMap="volBoardResultSet">
		<![CDATA[
		SELECT B.BOARD_ID, B.BOARD_TYPE, B.BOARD_TITLE, B.BOARD_CONTENT, B.BOARD_DEADLINE, B.BOARD_STATUS
		FROM BOARD B
		JOIN MEMBER M ON(M.MEMBER_USERNAME = B.REF_MEMBER_USERNAME)
		WHERE M.MEMBER_USERNAME = #{userName} AND B.BOARD_TYPE='Don' AND B.BOARD_STATUS = 'Y'
		AND TO_CHAR(BOARD_DEADLINE,'MM/dd') > TO_CHAR(SYSDATE,'MM/dd')
		]]>
	</select>
	
	<!-- 단체 모금 마감 -->
	<select id="getEndDList" resultMap="volBoardResultSet">
		<![CDATA[
		SELECT B.BOARD_ID, B.BOARD_TYPE, B.BOARD_TITLE, B.BOARD_CONTENT, B.BOARD_DEADLINE, B.BOARD_STATUS
		FROM BOARD B
		JOIN MEMBER M ON (M.MEMBER_USERNAME = B.REF_MEMBER_USERNAME)
		WHERE M.MEMBER_USERNAME = #{userName} AND B.BOARD_TYPE = 'Don' AND B.BOARD_STATUS='Y'
		AND TO_CHAR(BOARD_DEADLINE,'MM/dd') < TO_CHAR(SYSDATE,'MM/dd')
		]]>
	</select>
	
	<!-- 단체 봉사활동 모집 마감 -->
	<select id="getEndVList" resultMap="volBoardResultSet">
		<![CDATA[
		SELECT B.BOARD_ID, B.BOARD_TYPE, B.BOARD_TITLE, B.BOARD_CONTENT, B.BOARD_DEADLINE, B.BOARD_STATUS
		FROM BOARD B
		JOIN MEMBER M ON (M.MEMBER_USERNAME = B.REF_MEMBER_USERNAME)
		WHERE M.MEMBER_USERNAME = #{userName} AND B.BOARD_TYPE = 'Vol' AND B.BOARD_STATUS='Y'
		AND TO_CHAR(BOARD_DEADLINE,'MM/dd') < TO_CHAR(SYSDATE,'MM/dd')
		]]>
	</select>
	
	<!-- 회원이 기부한 내역 -->
	<select id="getDList" resultMap="volBoardResultSet">
		SELECT B.BOARD_ID, B.BOARD_TITLE, B.BOARD_DEADLINE, M.MEMBER_NICKNAME
		FROM BOARD B
		JOIN DONATION D ON (B.BOARD_ID = D.REF_BOARD_ID)
		JOIN MEMBER M ON ( M.MEMBER_USERNAME = D.REF_MEMBER_USERNAME)
		WHERE M.MEMBER_USERNAME = #{userName} AND B.BOARD_STATUS ='Y'
	</select>
	
	<!-- 회원이 봉사 신청한 내역 -->
	<select id="getVList" resultMap="volBoardResultSet">
		SELECT B.BOARD_ID, B.BOARD_TITLE, B.BOARD_DEADLINE, M.MEMBER_NICKNAME
		FROM BOARD B
		JOIN APPLICATION A ON (B.BOARD_ID = A.REF_BOARD_ID)
		JOIN MEMBER M ON ( M.MEMBER_USERNAME = A.REF_MEMBER_USERNAME)
		WHERE M.MEMBER_USERNAME = #{userName} AND B.BOARD_STATUS ='Y'
	</select>
	
	<select id="selectMsg" resultMap="messageResultSet">
		select MESSAGE_ID,REF_BOARD_ID,MESSAGE_CREATE_DATE,MESSAGE_TITLE,MESSAGE_CONTENT,MESSAGE_CHECK,SE_MESSAGE_STATUS,RE_MESSAGE_STATUS,
				SENDER_USERNAME,RECEIVER_USERNAME,BOARD_TYPE
		from message
    		join board on(REF_BOARD_ID = BOARD_ID)
    		where MESSAGE_ID =#{mId}
	</select>
	
	<update id="updateCheck" parameterType="java.util.HashMap">
		update message
		set MESSAGE_CHECK = 'Y'
		where RECEIVER_USERNAME = #{id} and MESSAGE_ID = #{mId}
	</update>
	
	<!-- 회원 수 카운트 -->
	<select id="getMemberCount" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_RIGHT = 'B' AND MEMBER_STATUS = 'Y'
	</select>
	
	<!-- 회원 리스트 가져오기 -->
	<select id="getMemberList" resultMap="memberResultSet">
		SELECT MEMBER_USERNAME, MEMBER_NICKNAME, MEMBER_NAME, MEMBER_PHONE, MEMBER_EMAIL, MEMBER_ENROLL_DATE
		FROM MEMBER
		WHERE MEMBER_RIGHT = 'B' AND MEMBER_STATUS = 'Y'
	</select>
	
	<!-- 단체 수 카운트 -->
	<select id="getGroupCount" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_RIGHT = 'C' AND MEMBER_STATUS = 'Y'
	</select>
	
	<!-- 단체 리스트 가져오기 -->
	<select id="getGroupList" resultMap="memberResultSet">
		SELECT MEMBER_USERNAME, MEMBER_NICKNAME, MEMBER_PHONE, MEMBER_EMAIL, MEMBER_ENROLL_DATE
		FROM MEMBER
		WHERE MEMBER_RIGHT = 'C' AND MEMBER_STATUS = 'Y'
	</select>
	
	
	<!-- 관리자페이지 봉사글, 모금글카운트 -->
	<select id="getAllListCount" resultType="long">
		SELECT COUNT(*)
		FROM BOARD
		WHERE BOARD_TYPE=#{boardType}
	</select>
	
	<!-- 관리자페이지 봉사글, 모금글 리스트 가져오기 -->
	<select id="getAllList" resultMap="volBoardResultSet">
		SELECT BOARD_ID, BOARD_TITLE, BOARD_CONTENT, BOARD_CREATE_DATE, BOARD_MODIFY_DATE, BOARD_DEADLINE, MEMBER_NICKNAME
		FROM BOARD
		<if test="boardType == 'Don'">
		JOIN FUNDRAISING ON(BOARD_ID = REF_BOARD_ID)
		</if>
		<if test="boardType == 'Vol'">
		JOIN VOLUNTEER ON(BOARD_ID = REF_BOARD_ID)
		</if>
		JOIN MEMBER ON (MEMBER_USERNAME = REF_MEMBER_USERNAME)
	</select>
	
	<insert id="inquiry">
		insert into message
		values(seq_mid.nextval, #{refBoardId}, sysdate, #{messageTitle}, #{messageContent}, default, default,default, #{senderUsername}, #{receiverUsername})
	</insert>

	
	<select id="notReadMsg" resultType="_int">
		select count(*)
		from message
    		where RECEIVER_USERNAME = #{mId} and MESSAGE_CHECK='N'
	</select>
	
	<insert id="insertCertificate">
		INSERT ALL
		INTO ATTACHMENT VALUES(NEW_AID,#{fileExt},SYSDATE,#{originalName},#{renameName},#{savePath},0,default)
		INTO CERTIFICATE VALUES(#{userName},CUR_AID)
		SELECT * FROM DUAL
	</insert>
	
	<select id="getCertificate" parameterType="string" resultMap="attachmentResultSet">
		SELECT ATTM_ID, FILE_TYPE, CREATE_DATE, ORIGINAL_NAME, RENAME_NAME, FILE_LINK, ATTM_LEVEL, FILE_STATUS
		FROM ATTACHMENT
		JOIN CERTIFICATE USING(ATTM_ID)
		JOIN MEMBER USING(MEMBER_USERNAME)
		WHERE MEMBER_USERNAME = #{memberUsername} AND FILE_STATUS = 'Y'
	</select>
	
	<resultMap type="Attachment" id="attachmentResultSet">
		<id property="attmId" column="ATTM_ID"/>
		<result property="boardId" column="BOARD_ID"/>
		<result property="fileType" column="FILE_TYPE"/>
		<result property="createDate" column="CREATE_DATE"/>
		<result property="originalName" column="ORIGINAL_NAME"/>
		<result property="renameName" column="RENAME_NAME"/>
		<result property="fileLink" column="FILE_LINK"/>
		<result property="level" column="ATTM_LEVEL"/>
		<result property="fileStatus" column="FILE_STATUS"/>
	</resultMap>
	
	<select id="getGroupCertiCount" resultType="_int">
		SELECT COUNT(*)
		FROM CERTIFICATE
		JOIN ATTACHMENT USING(ATTM_ID)
		WHERE FILE_STATUS = 'Y'
	</select>
	
	<select id="getGroupCertificate" resultMap="groupCertificate">
		SELECT *
		FROM ATTACHMENT A
		JOIN CERTIFICATE C USING(ATTM_ID)
		JOIN MEMBER M USING(MEMBER_USERNAME)
		WHERE FILE_STATUS = 'Y'
	</select>
	
	<resultMap id="groupCertificate" type="com.kh.HelpForUs.member.model.vo.Certificate">
		<collection property="member" resultMap="memberResultSet"/>
		<collection property="attachment" resultMap="attachmentResultSet"/>
	</resultMap>
	
	<update id="authorizeGroup">
		UPDATE MEMBER
		SET MEMBER_RIGHT = 'C'
		WHERE MEMBER_USERNAME = #{userName} AND MEMBER_STATUS = 'Y'
	</update>
	
	<select id="checkEmail" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_EMAIL = #{email} AND MEMBER_STATUS = 'Y'
	</select>
	
	<update id="modifyPwd">
		UPDATE MEMBER
		SET MEMBER_PWD = #{enPwd}
		WHERE MEMBER_EMAIL = #{email}
	</update>
	
	<resultMap type="Reply" id="replyResultSet">
		<id property="replyId" column="REPLY_ID"/>
		<result property="replyContent" column="REPLY_CONTENT"/>
		<result property="replyModifyDate" column="REPLY_MODIFY_DATE"/>
		<result property="replyCreateDate" column="REPLY_CREATE_DATE"/>
		<result property="refMemberUsername" column="REF_MEMBER_USERNAME"/>
		<result property="refBoardId" column="REF_BOARD_ID"/>
		<result property="replyStatus" column="REPLY_STATUS"/>
		<result property="nickName" column="MEMBER_NICKNAME"/>
		<result property="refBoardType" column="BOARD_TYPE"/>
	</resultMap>
	
	<select id="getRepCount" resultType="_int">
		SELECT COUNT(*)
		FROM reply r
		JOIN member on(r.REF_MEMBER_USERNAME= MEMBER_USERNAME)
		JOIN board b on(r.REF_BOARD_ID = b.BOARD_ID)
		WHERE BOARD_TYPE= #{boardType} AND BOARD_STATUS ='Y' and REPLY_STATUS='Y'
	</select>
	
	<select id="getRepList" resultMap="replyResultSet">
		SELECT REPLY_ID, REPLY_CONTENT, REPLY_MODIFY_DATE, REPLY_CREATE_DATE, r.REF_MEMBER_USERNAME, r.REF_BOARD_ID, REPLY_STATUS, MEMBER_NICKNAME,b.BOARD_TYPE
		FROM reply r
			JOIN member m on(r.REF_MEMBER_USERNAME = m.MEMBER_USERNAME)
        	JOIN board b on(r.REF_BOARD_ID = b.BOARD_ID)
		WHERE b.BOARD_TYPE=#{boardType} AND b.BOARD_STATUS ='Y' and REPLY_STATUS='Y'
	</select>
	
	<select id="getRRepCount" resultType="_int">
		SELECT COUNT(*)
		FROM reply r
		JOIN member on( r.REF_MEMBER_USERNAME= MEMBER_USERNAME)
		JOIN board b on(r.REF_BOARD_ID = b.BOARD_ID)
		WHERE (BOARD_TYPE= 'donRev' or BOARD_TYPE= 'volRev')AND BOARD_STATUS ='Y' and REPLY_STATUS='Y'
	</select>
	
	<select id="getRRepList" resultMap="replyResultSet">
		SELECT REPLY_ID, REPLY_CONTENT, REPLY_MODIFY_DATE, REPLY_CREATE_DATE, r.REF_MEMBER_USERNAME, r.REF_BOARD_ID, REPLY_STATUS, MEMBER_NICKNAME,b.BOARD_TYPE
		FROM reply r
			JOIN member m on(r.REF_MEMBER_USERNAME = m.MEMBER_USERNAME)
        	JOIN board b on(r.REF_BOARD_ID = b.BOARD_ID)
		WHERE (b.BOARD_TYPE= 'donRev' or b.BOARD_TYPE= 'volRev') AND b.BOARD_STATUS ='Y' and REPLY_STATUS='Y'
	</select>
	
	
	

</mapper>